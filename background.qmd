---
title: "Background"
page-layout: full
toc: true
---

```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
library(ggplot2)

## plot settings
theme_mrlit<-function(...){
  theme_classic(base_size=14)%+replace%
    theme(legend.position="bottom",
          strip.background=element_rect(colour='grey99',fill='grey98'),
          panel.grid.major=element_line(linewidth=lwidth/3,colour='grey'),
          panel.grid.minor=element_line(linewidth=lwidth/5,colour='grey'),
          plot.background=element_rect(fill=NA,linewidth=lwidth/2,colour='grey'),
          panel.border=element_rect(fill=NA,linewidth=lwidth/2,colour='grey'),
          axis.line=element_line(linewidth=.2),
          axis.ticks=element_line(linewidth=.2))
}

## static vars
fpath="data"
fname="csv-Mendelianr-set.csv"
cap_verb="Data from PubMed search for Mendelian randomi[s/z]ation, title only. "
xlab="Date"
ylab_root="New PubMed Entries"
mycol="dodgerblue3"
lwidth=.4
outpath='data'
outfroot="mrlit_pubmed"
outfile=paste0(outfroot,"_",gsub("-","",Sys.Date()),".csv")

## Load data ####
rdat <- read_csv(file.path(fpath, fname))
max_pubmed_date=max(rdat$`Create Date`,na.rm=T)

time_levels=c("weeks","months","years")


## Time-wise summary ####

## loop through time levels
res=bind_rows(lapply(c(time_levels),function(z){
  
  ## assign time groups then remove record duplications from e.g. pub comments
  dat=rdat|>
    mutate(tend=ceiling_date(`Create Date`,unit=z)-1)|> 
    group_by(Title,Authors)|>
    filter(`Create Date`==min(`Create Date`))|>
    ungroup()
  
  ## ensure all date rows exist even as zero.
  agg=left_join(crossing(
    tend=seq.Date(from=min(dat$tend),to=max(dat$tend),by=paste(1,gsub("s$","",z))))|>
      mutate(tend=ceiling_date(tend,unit=z)-1),
    dat|>
      group_by(tend)|>
      summarise(n=as.numeric(n()),.groups='drop'),by=join_by(tend))|>
    mutate(n=if_else(!is.finite(n),as.numeric(0),n))|>
    ungroup()|> 
    mutate(time_level=z) 
  agg
}))|> 
  select(pubmed_date=tend,n_publications=n,time_level) |> 
  mutate(cap_verb=cap_verb,file_name=fname) |> 
  mutate(time_level=stringr::str_to_title(time_level)) |> 
  mutate(last_pubmed_date=max_pubmed_date)

## write ####
# write_csv(res,paste0(outpath,"/",outfile))


## plot ####
p=ggplot(res|> 
           filter(time_level == "Weeks" & pubmed_date!=max(pubmed_date,na.rm=F)),aes(pubmed_date,n_publications))+
  # geom_smooth(se=F,colour='black')+
  geom_point(size=.25,colour=mycol,alpha=1)+
  geom_line(alpha=.75,colour=mycol)+
  geom_line(data=res %>% filter(time_level == "Weeks"),linetype=2,alpha=.75,colour=mycol)+
  scale_x_date(date_minor_breaks="1 year") +
  
  labs(x="Date",
       y=paste(ylab_root,"per week"),
       caption=paste("Most recent publication date:", max(subset(res, time_level=="Weeks")$pubmed_date)),
       x="Date") +
  theme_mrlit()
# p

# ggsave(p, file="mr-weeks-2023-11-13.pdf")

```

## MR in context

Mendelian randomisation (MR) is a statistical method that aims to approximate causal inference in a randomised controlled trial, using genetic associations obtained from cheap and accessible observational cohorts. MR is often performed in an instrumental variables framework using summary data from genome wide association studies, making it a free and accessible analytical approach to a wide range of epidemiological questions. As such, thousands of MR studies are now being published per year. Many of these papers are unreliable.

```{r, echo=FALSE}
#| fig.cap: "Publications per week from PubMed search for Mendelian randomi[s/z]ation, title only. Credits [@MR_lit](https://twitter.com/Mendelian_lit)"
p
```

MR is not a panacea for causal inference, and robust inference depends on a number of conditions being satisfied, many of which are unprovable. To meet this challenge, numerous methods are being published every year that aim to improve the utility and reliability of the MR framework. Most methods are made available with accompanying open source software. However there is no simple way of discovering the full range of available methods, there are no guidelines on how to use different methods in conjunction and under what contexts, and there is no common standard against which these methods are evaluated.

The OpenMR project aims to improve empirical epidemiological studies by providing method developers a platform for MR analytical tools to be annotated, searched and discussed.

## OpenMR project work packages

1. **Inventory of MR methods**, consistently annotated to enable selection of appropriate methods for specific analyses
2. **Software repository** of MR methods with regularised environments
3. **Rolling simulations** to allow consistent comparison and annotation of methods against the MR conditions required for robust inference


## Tenets of the OpenMR project

- **The OpenMR project should be open**
    - Anybody should be able to contribute with minimal gatekeeping.
    - Identities of contributors should be public.
- **The OpenMR project should represent methods for a diverse set of analysis settings and concerns**
- **The OpenMR project does not perform scientific review**
    - Methods in the database are listed with the features claimed of them in published or preprint manuscripts. We do not further vet these claims

## Related sites

* [MRC IEU software page](https://mrcieu.github.io/#software-overview)
* [MRC IEU MR Dictionary](https://mr-dictionary.mrcieu.ac.uk)
* [Steve Burgess' group website](https://www.mendelianrandomization.com/index.php/software-code)
* [Chris Moreno-Stokoe's website](https://www.morenostok.io/mrsoftwarelist.html)
* [TwoSampleMR guide to performing MR](https://mrcieu.github.io/TwoSampleMR/)
* [Software code for drawing Mendelian randomization directed acyclic graphs and diagrams](https://remlapmot.github.io/mrdags/)
